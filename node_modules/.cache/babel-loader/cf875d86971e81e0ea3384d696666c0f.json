{"ast":null,"code":"var _jsxFileName = \"/Users/isang-a/Desktop/React/movie_app/src/Movie.js\";\nimport React, { Component } from 'react';\nimport './Movie.css';\nimport PropTypes from 'prop-types'; // class Movie extends Component{\n//     static propTypes = {\n//         title: PropTypes.string.isRequired,\n//         poster: PropTypes.string\n//     }\n//     // 예상치 못한 값이어도(string이 아니라 int여도)\n//     // 화면에 표시는 되지만, warning 메시지가 뜬다\n//     render() {\n//         const { title, poster } = this.props\n//         return (\n//             <div>\n//                 <MoviePoster poster={poster} />\n//                 {/* 이렇게 넘겨준 이유는, props는 Movie에게 넘어온 것이지 MoviePoster에게 넘어온 것이 아니기 때문에 */}\n//                 {/* MoviePoster에게도 props를 전달해주려면 별도로 전달을 해줘야 한다 */}\n//                 <h1>{title}</h1>\n//             </div>\n//         )\n//     }\n// }\n\nfunction MoviePoster({\n  poster\n}) {\n  return React.createElement(\"img\", {\n    src: poster,\n    alt: \"\\uACE0\\uC591\\uC774\\uB294\\uCD5C\\uACE0\\uC591\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }) // class가 아니라서 this.props를 쓰지 않는다는건 무슨말\n  // 함수형 컴포넌트니까, 파라미터로 받으니까\n  ;\n}\n\nfunction Movie({\n  title,\n  poster\n}) {\n  // const { title, poster } = this.props \n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(MoviePoster, {\n    poster: this.props.poster,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, this.props.title));\n}\n\nMovie.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired\n};\nMoviePoster.propTypes = {\n  poster: PropTypes.number.isRequired\n};\nexport default Movie;","map":{"version":3,"sources":["/Users/isang-a/Desktop/React/movie_app/src/Movie.js"],"names":["React","Component","PropTypes","MoviePoster","poster","Movie","title","props","propTypes","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAGA,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAA+B;AAC3B,SACI;AAAK,IAAA,GAAG,EAAEA,MAAV;AAAkB,IAAA,GAAG,EAAC,4CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAEI;AACA;AAHJ;AAKH;;AAED,SAASC,KAAT,CAAe;AAACC,EAAAA,KAAD;AAAQF,EAAAA;AAAR,CAAf,EAAgC;AAC5B;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAE,KAAKG,KAAL,CAAWH,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,KAAKG,KAAL,CAAWD,KAAhB,CAFJ,CADJ;AAMH;;AAEDD,KAAK,CAACG,SAAN,GAAkB;AACdF,EAAAA,KAAK,EAAEJ,SAAS,CAACO,MAAV,CAAiBC,UADV;AAEdN,EAAAA,MAAM,EAAEF,SAAS,CAACO,MAAV,CAAiBC;AAFX,CAAlB;AAKAP,WAAW,CAACK,SAAZ,GAAwB;AACpBJ,EAAAA,MAAM,EAAEF,SAAS,CAACS,MAAV,CAAiBD;AADL,CAAxB;AAIA,eAAeL,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Movie.css';\nimport PropTypes from 'prop-types';\n\n// class Movie extends Component{\n\n//     static propTypes = {\n//         title: PropTypes.string.isRequired,\n//         poster: PropTypes.string\n//     }\n//     // 예상치 못한 값이어도(string이 아니라 int여도)\n//     // 화면에 표시는 되지만, warning 메시지가 뜬다\n\n//     render() {\n//         const { title, poster } = this.props\n//         return (\n//             <div>\n//                 <MoviePoster poster={poster} />\n//                 {/* 이렇게 넘겨준 이유는, props는 Movie에게 넘어온 것이지 MoviePoster에게 넘어온 것이 아니기 때문에 */}\n//                 {/* MoviePoster에게도 props를 전달해주려면 별도로 전달을 해줘야 한다 */}\n\n//                 <h1>{title}</h1>\n//             </div>\n//         )\n//     }\n// }\n\n\nfunction MoviePoster({poster}) {\n    return (\n        <img src={poster} alt=\"고양이는최고양\" /> \n        // class가 아니라서 this.props를 쓰지 않는다는건 무슨말\n        // 함수형 컴포넌트니까, 파라미터로 받으니까\n    )\n}\n\nfunction Movie({title, poster}) {\n    // const { title, poster } = this.props \n    return (\n        <div>\n            <MoviePoster poster={this.props.poster} />\n            <h1>{this.props.title}</h1>\n        </div>\n    )\n}\n\nMovie.propTypes = {\n    title: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n}\n\nMoviePoster.propTypes = {\n    poster: PropTypes.number.isRequired\n}\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}