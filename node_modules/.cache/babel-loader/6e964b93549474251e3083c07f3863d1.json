{"ast":null,"code":"var _jsxFileName = \"/Users/isang-a/Desktop/React/movie_app/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Movie from './Movie';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this._getMovies = async () => {\n      const movies = await this._callApi();\n      this.setState({\n        movies\n      });\n    };\n\n    this._callApi = () => {\n      return fetch('https://yts.am/api/v2/list_movies.json?quality=3D?order_by=rating').then(potato => potato.json()).then(json => json.data.movies).catch(err => console.log(err));\n    };\n\n    this._renderMovies = () => {\n      const movies = this.state.movies.map((movie, index) => {\n        return React.createElement(Movie, {\n          title: movie.title,\n          poster: movie.poster,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      });\n      return movies;\n    };\n\n    this._renderLoading = () => {\n      const url = \"https://loading.io/spinners/rolling/index.curve-bars-loading-indicator.gif\";\n      return React.createElement(\"img\", {\n        src: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    };\n  }\n\n  componentDidMount() {\n    this._getMovies();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.movies ? this._renderMovies() : this._renderLoading());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/isang-a/Desktop/React/movie_app/src/App.js"],"names":["React","Movie","App","Component","state","_getMovies","movies","_callApi","setState","fetch","then","potato","json","data","catch","err","console","log","_renderMovies","map","movie","index","title","poster","_renderLoading","url","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB,EAFwB;;AAAA,SAQhCC,UARgC,GAQnB,YAAY;AACvB,YAAMC,MAAM,GAAG,MAAM,KAAKC,QAAL,EAArB;AACA,WAAKC,QAAL,CAAc;AACZF,QAAAA;AADY,OAAd;AAGD,KAb+B;;AAAA,SAehCC,QAfgC,GAerB,MAAM;AACf,aAAOE,KAAK,CAAC,mEAAD,CAAL,CACNC,IADM,CACDC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADT,EAENF,IAFM,CAEDE,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUP,MAFjB,EAGNQ,KAHM,CAGAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHP,CAAP;AAID,KApB+B;;AAAA,SAsBhCG,aAtBgC,GAsBhB,MAAM;AACpB,YAAMZ,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAAX,CAAkBa,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACrD,eAAO,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAED,KAAK,CAACE,KAApB;AAA2B,UAAA,MAAM,EAAEF,KAAK,CAACG,MAAzC;AAAiD,UAAA,GAAG,EAAEF,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFc,CAAf;AAIA,aAAOf,MAAP;AACD,KA5B+B;;AAAA,SA8BhCkB,cA9BgC,GA8Bf,MAAM;AACrB,YAAMC,GAAG,GAAG,4EAAZ;AACA,aAAO;AAAK,QAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAjC+B;AAAA;;AAIhCC,EAAAA,iBAAiB,GAAE;AACjB,SAAKrB,UAAL;AACD;;AA6BDsB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKvB,KAAL,CAAWE,MAAX,GAAoB,KAAKY,aAAL,EAApB,GAA2C,KAAKM,cAAL,EAD9C,CADF;AAKD;;AAzC+B;;AA4ClC,eAAetB,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Movie from './Movie'\n\n\nclass App extends React.Component {\n\n  state = {}\n\n  componentDidMount(){\n    this._getMovies();\n  }\n   \n  _getMovies = async () => {\n    const movies = await this._callApi()\n    this.setState({\n      movies\n    })\n  }\n\n  _callApi = () => {\n    return fetch('https://yts.am/api/v2/list_movies.json?quality=3D?order_by=rating')\n    .then(potato => potato.json())\n    .then(json => json.data.movies)\n    .catch(err => console.log(err))\n  }\n\n  _renderMovies = () => {\n    const movies = this.state.movies.map((movie, index) => {\n      return <Movie title={movie.title} poster={movie.poster} key={index} ></Movie>\n    })\n\n    return movies\n  }\n\n  _renderLoading = () => {\n    const url = \"https://loading.io/spinners/rolling/index.curve-bars-loading-indicator.gif\"\n    return <img src={url}></img>\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.movies ? this._renderMovies() : this._renderLoading() }\n      </div>\n    );\n  }\n} \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}